import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

import javax.swing.BorderFactory;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;


public class GUI {
	JFrame frame = new JFrame();
	JTextField textField = new JTextField();
	JTextField textField2 = new JTextField();
	JLabel label = new JLabel();
	JLabel label2 = new JLabel();
	JPanel panel = new JPanel();
	JPanel panel2 = new JPanel();
	JButton button = new JButton("Add Task");  
	JButton button2 = new JButton("Delete Task");  

//	JList list = new JList();
	JTable table = new JTable();
	String[] columnTitle = {"Task", "Date"};
	public GUI() {
		textField.setPreferredSize(new Dimension(200,30));	
		textField2.setPreferredSize(new Dimension(200,30));	
		DefaultTableModel model = new DefaultTableModel(); //DefaultListModel
		model.setColumnIdentifiers(columnTitle);
		table.setModel(model);;
		table.setPreferredScrollableViewportSize(new Dimension(300,table.getRowHeight() * 5));
		//list.setModel(model);
		label.setText("Task");
		label2.setText("Date");
		panel.add(label);
		panel.add(textField);
		panel.add(label2);
		panel.add(textField2);
		

		panel.add(new JScrollPane(table));
		panel.add(button);
		panel.add(button2);
	
		frame.setTitle("To-Do List App");
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.add(panel);
		frame.setSize(400,300);
		frame.setVisible(true);
		frame.setResizable(true);
		Object[] row = new Object[2];
		
		button.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e) {
				if(!textField.getText().toString().isEmpty()) {
					String message = textField.getText().toString();
					String message2 = textField2.getText().toString();
				//	model.addElement(message);
					row[0] = message;
					row[1] = message2;
					model.addRow(row);
					textField.setText(null);
					textField2.setText(null);
				}
			}
			
		});
		
		button2.addMouseListener(new MouseAdapter() {
			public void mouseClicked(MouseEvent e) {
				model.removeRow(table.getSelectedRow());
			}
		});
		 
	}
	
	public static void main(String[] args) {
		new GUI();
	}
}


